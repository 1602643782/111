# 添加数字函数
# row为行坐标，col为列坐标
def add_num(self, row, col):
    if self.origin[row][col] == 0:  # 如果该数为0，则进行循环添加数字
        for i in range(1, 10):
            if self.check(row, col, i):  # 调用检测函数，当返回值为True时，该数字符合规则
                self.origin[row][col] = i  # 把i赋值给当前坐标
                next_row, next_col = self.next_num(row, col)  # 调用下一个数字函数
                if next_row == -1:  # 当返回值为-1的时候，没有不为零的数，程序结束。
                    print(self.origin)
                    return True
                else:
                    # 继续回调此函数
                    result = self.add_num(next_row, next_col)
                    # 当此数都不符合规则的时候，重置当前数，返回上一层
                    if result == None:
                        self.origin[row][col] = 0
                    else:
                        return True


# 检查函数
def check(self, row, col, i):
    # 检查行里面是否有重复数字
    for row_i in self.origin[row]:
        if row_i == i:
            return False
    # 检查列里面是否有重复数字
    for col_i in self.origin:
        if col_i[col] == i:
            return False
    # 检查每个宫里面是否有重复的数字
    # x，y为该宫里面左上角数字的坐标
    x, y = row - row % 3, col - col % 3
    # xy是一个3X3的宫组成的列表
    xy = self.origin[x][y:y + 3] + self.origin[x + 1][y:y + 3] + self.origin[x + 2][y:y + 3]
    for j in xy:  # 遍历列表，如果列表中存在与i相同的数，返回False
        if j == i:
            return False
    return True


# 查找下一个数函数
def next_num(self, row, col):
    # 列坐标加1，遇到为0的数，返回该数字的行、列坐标
    for n_col in range(col + 1, 9):
        if self.origin[row][n_col] == 0:
            return row, n_col

    # 列坐标循环完之后，行坐标加1，列坐标从0-9依次增加，
    # 继续查找下一个不为0的数
    for row_n in range(row + 1, 9):
        for col_n in range(0, 9):
            if self.origin[row_n][col_n] == 0:
                return row_n, col_n
    # 没有不为零的数，返回-1，程序结束
    return -1, -1
